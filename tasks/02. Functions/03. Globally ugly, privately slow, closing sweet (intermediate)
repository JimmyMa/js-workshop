Create a third variant of the isOneTwoOrThree-methods utilizing javascript's closures; where data is private, the function is fast - it's sweet.
--
var data = [1, 2, 3];
var uglyIsOneTwoOrThree = function (n) {
  return n in data;
};
assert(uglyIsOneTwoOrThree(1) === true);
assert(uglyIsOneTwoOrThree(2) === true);
assert(uglyIsOneTwoOrThree(4) === false);
                               

var slowIsOneTwoOrThree = function (n) {
  var data = [1, 2, 3];
  return n in data;
};
assert(slowIsOneTwoOrThree(1) === true);
assert(slowIsOneTwoOrThree(2) === true);
assert(slowIsOneTwoOrThree(4) === false);
                                        

var sweetIsOneTwoOrThree = function () {

}();                                               
assert(sweetIsOneTwoOrThree(1) === true);
assert(sweetIsOneTwoOrThree(2) === true);
assert(sweetIsOneTwoOrThree(4) === false);